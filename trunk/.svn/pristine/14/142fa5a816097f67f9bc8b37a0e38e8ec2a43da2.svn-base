/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.vw.swf.security.controller;

import io.datafx.controller.ViewController;
import io.datafx.controller.flow.FlowException;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.beans.property.SimpleBooleanProperty;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.collections.transformation.FilteredList;
import javafx.collections.transformation.SortedList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.scene.Node;
import javafx.scene.control.Button;
import javafx.scene.control.Pagination;
import javafx.scene.control.TableCell;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.util.Callback;
import javax.annotation.PostConstruct;
import mx.vw.swf.cdi.DataFXLauncher;
import mx.vw.swf.security.dao.SegPerfilDAO;
import mx.vw.swf.security.model.SegPerfil;
import mx.vw.swf.sms.utilerias.Pantallas;
import mx.vw.swf.sms.utilerias.Utilerias;


/**
 * FXML Controller class
 *
 * @author fox1x0d
 */
@ViewController("/fxml/security/AdministrarPerfiles.fxml")
public class AdministrarPerfilesController  extends MenuController{
    
    @FXML   private TableView<SegPerfil>      tablaPerfiles;  
    @FXML   private TableColumn<SegPerfil,String>  colPerfil,colEstatus;
    @FXML   private TableColumn<SegPerfil,Long> colId; 
    @FXML   private TableColumn<SegPerfil,Boolean> colAcciones; 
    @FXML   private BorderPane borderPerfiles;
            private ObservableList<SegPerfil> listaPerfiles;
            private FilteredList<SegPerfil> filteredData;
            private SortedList<SegPerfil> sortedData;

  
            private Pagination pagination;
    
    @PostConstruct
    public void postConstruct() {
        super.postConstruct();
        inicializaColumnasTabla();
        inicializaPerfiles();     
        
    }
    
     public void inicializaPerfiles(){
        setListaPerfiles(FXCollections.observableArrayList(obtieneListaPerfiles()));
        filteredData = new FilteredList<>(getListaPerfiles(), p -> true);
        sortedData= new SortedList<>(filteredData); 
        sortedData.comparatorProperty().bind(tablaPerfiles.comparatorProperty());
        inicializaTablaPerfil(sortedData);
        
    }
     public void inicializaColumnasTabla(){
        
         colId.setText(DataFXLauncher.mensajesPropertiesSeg.getProperty("admin_id"));         
         colPerfil.setText(DataFXLauncher.mensajesPropertiesSeg.getProperty("admin_perfil"));      
         colEstatus.setText(DataFXLauncher.mensajesPropertiesSeg.getProperty("admin_estatus"));
         colAcciones.setText(DataFXLauncher.mensajesPropertiesSeg.getProperty("admin_acciones"));
         
         colId.setCellValueFactory(new PropertyValueFactory<>("id"));
         colPerfil.setCellValueFactory(new PropertyValueFactory<>("perfil"));
         colEstatus.setCellValueFactory(new PropertyValueFactory<>("etiquetaEstatus"));    
         
    }
    public void inicializaTablaPerfil(SortedList<SegPerfil> lista){
        if(lista.size()>0){
          int renglonesMostrar=5;
          int tablasPorPagina=1;        
          pagination = Utilerias.creaPaginacionTableView(renglonesMostrar, lista, tablaPerfiles); 
          borderPerfiles.setCenter(null);
          borderPerfiles.setCenter(pagination);
          inicializacolumnaAccion();
          //inicializaAccionesFiltros();
        }
        else{
            tablaPerfiles.getItems().clear();
        }
    }

     public ObservableList<SegPerfil> obtieneListaPerfiles(){
            List<SegPerfil> lista = new SegPerfilDAO().findAll();
            ObservableList<SegPerfil> listaol = FXCollections.observableArrayList();
            for(SegPerfil item:lista){
                listaol.add(item);
            }
            return listaol;
    }
    public ObservableList<SegPerfil> getListaPerfiles() {
        return listaPerfiles;
    }

    public void setListaPerfiles(ObservableList<SegPerfil> listaPerfiles) {
        this.listaPerfiles = listaPerfiles;
    }
     
    public void inicializacolumnaAccion(){       
          colAcciones.setSortable(false);
          colAcciones.setCellValueFactory(new Callback<TableColumn.CellDataFeatures<SegPerfil, Boolean>, ObservableValue<Boolean>>(){                   
                     public ObservableValue<Boolean> call(TableColumn.CellDataFeatures<SegPerfil, Boolean> p) {                                                                                             
                        return new SimpleBooleanProperty(p.getValue() != null);                       
                     }                   
          });

         colAcciones.setCellFactory(new Callback<TableColumn<SegPerfil,Boolean>,TableCell<SegPerfil,Boolean>>(){        
                 @Override
                 public TableCell<SegPerfil,Boolean> call(TableColumn<SegPerfil,Boolean> param) {                
                         TableCell<SegPerfil,Boolean> cell = new TableCell<SegPerfil,Boolean>(){
                                
                                @Override
                                 public void updateItem(Boolean item, boolean empty) {
                                     
                                         if(item!=null){
                                           

                                            Button editar = new Button("Editar"); 
                                            Button desactivar = new Button("Desactivar"); 
                                            Button perfiles = new Button("Asignar Funciones");
                                            HBox botones= new HBox(editar,desactivar,perfiles);
                                            botones.setSpacing(10);
                                            setGraphic(botones);
                                            editar.setOnAction(new EventHandler<ActionEvent>() {
                                                 @Override
                                                 public void handle(ActionEvent t) {
                                                    
                                                    
                                                 int selectdIndex = getTableRow().getIndex();
                                                 SegPerfil perfil=(SegPerfil) tablaPerfiles.getItems().get(selectdIndex);

                                                         creaEditaPerfil(perfil,t);
                                                     

                                                 }
                                            });
                                            desactivar.setOnAction(new EventHandler<ActionEvent>() {
                                                 @Override
                                                 public void handle(ActionEvent t) {
                                                     Short desactiva=0;
                                                     int selectdIndex = getTableRow().getIndex();
                                                     SegPerfil perfil=(SegPerfil) tablaPerfiles.getItems().get(selectdIndex);
                                                     perfil.setEstatus(desactiva);
                                                     //desactivarUsuario(perfil);
                                                     //inicializaUsuarios();

                                                 }
                                            });
                                         } 
                                 }
                         };                           
                         return cell;
                 }	
         });

    } 
    
     public void nuevoPerfil(ActionEvent event)  {
       creaEditaPerfil(null,event);
    }
       public void creaEditaPerfil(SegPerfil perfil, ActionEvent ev) {
        String titulo=perfil!=null?"Editar Perfil":"Nuevo Perfil";
        Stage stage;
        try {
            
            CrearEditarPerfilController controller= new CrearEditarPerfilController();
            controller.setPerfil(perfil);
            controller.setAdministrarPerfilesController(this);
            stage = Utilerias.nuevaVentana(Pantallas.FXML_CREAR_EDITAR_PERFILES, controller, titulo);
            stage.initModality(Modality.WINDOW_MODAL);
            stage.initStyle(StageStyle.UTILITY);
            stage.setResizable(false);
            stage.initOwner(((Node)ev.getSource()).getScene().getWindow());   
            stage.showAndWait();
        } catch (IOException ex) {
            Logger.getLogger(AdministrarPerfilesController.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
   }
}
