
USE sms
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SEG_PERFIL_USR_SEG_PERFIL') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SEG_PERFIL_USR DROP CONSTRAINT FK_SEG_PERFIL_USR_SEG_PERFIL
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SEG_PERFIL_USR_SEG_USUARIO') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SEG_PERFIL_USR DROP CONSTRAINT FK_SEG_PERFIL_USR_SEG_USUARIO
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SEG_PERMISO_PERFIL_SEG_PERF') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SEG_PERMISO_PERFIL DROP CONSTRAINT FK_SEG_PERMISO_PERFIL_SEG_PERF
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SEG_PERMISO_PERFIL_SEG_PERM') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SEG_PERMISO_PERFIL DROP CONSTRAINT FK_SEG_PERMISO_PERFIL_SEG_PERM
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_CTE_PROV_USUARIO_CREA') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_CTE_PROV DROP CONSTRAINT FK_SMS_CTE_PROV_USUARIO_CREA
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_CTE_PROV_USUARIO_UPD') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_CTE_PROV DROP CONSTRAINT FK_SMS_CTE_PROV_USUARIO_UPD
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_PROD_CTEPROV_USUARIO_CREA') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_PRODUCTO DROP CONSTRAINT FK_SMS_PROD_CTEPROV_USUARIO_CREA
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_PROD_CTEPROV_USUARIO_UPD') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_PRODUCTO DROP CONSTRAINT FK_SMS_PROD_CTEPROV_USUARIO_UPD
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_PROD_CTEPROV_SMS_CTE_PROV') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_PROD_CTEPROV DROP CONSTRAINT FK_SMS_PROD_CTEPROV_SMS_CTE_PROV
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_PROD_CTEPROV_SMS_PRODUCTO') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_PROD_CTEPROV DROP CONSTRAINT FK_SMS_PROD_CTEPROV_SMS_PRODUCTO
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_MOVIMIENTO_SEG_USUARIO') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_MOVIMIENTO DROP CONSTRAINT FK_SMS_MOVIMIENTO_SEG_USUARIO
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_MOVIMIENTO_SMS_CTE_PROV') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_MOVIMIENTO DROP CONSTRAINT FK_SMS_MOVIMIENTO_SMS_CTE_PROV
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_MOVIMIENTO_SMS_PROD_CTEPROV') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_MOVIMIENTO DROP CONSTRAINT FK_SMS_MOVIMIENTO_SMS_PROD_CTEPROV
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_MOVIMIENTO_USUARIO_ENT') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_MOVIMIENTO DROP CONSTRAINT FK_SMS_MOVIMIENTO_USUARIO_ENT
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_MOVIMIENTO_USUARIO_SAL') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_MOVIMIENTO DROP CONSTRAINT FK_SMS_MOVIMIENTO_USUARIO_SAL
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_SMS_MOVIMIENTO_USUARIO_SAP') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE SMS_MOVIMIENTO DROP CONSTRAINT FK_SMS_MOVIMIENTO_USUARIO_SAP
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FK_CAT_ADMIN_CAT_APPS') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE dbo.FWK_CAT_ADMIN DROP CONSTRAINT FK_CAT_ADMIN_CAT_APPS
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FK_CAT_CONTENT_CAT_ADMIN') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE dbo.FWK_CAT_CONTENT DROP CONSTRAINT FK_CAT_CONTENT_CAT_ADMIN
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FK_CAT_CONTENT_CAT_APPS') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE dbo.FWK_CAT_CONTENT DROP CONSTRAINT FK_CAT_CONTENT_CAT_APPS
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FK_FWK_CORREO_TEMPLATE_FWK_CAT') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE dbo.FWK_CORREO_TEMPLATE DROP CONSTRAINT FK_FWK_CORREO_TEMPLATE_FWK_CAT
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FK_FWK_CORREO_PEND_FWK_CAT_APP') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE dbo.FWK_CORREO_PEND DROP CONSTRAINT FK_FWK_CORREO_PEND_FWK_CAT_APP
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FK_FWK_LOGGER_FWK_CAT_APPS') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE dbo.FWK_LOGGER DROP CONSTRAINT FK_FWK_LOGGER_FWK_CAT_APPS
;



IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SEG_USUARIO') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SEG_USUARIO
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SEG_PERFIL') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SEG_PERFIL
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SEG_PERMISO') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SEG_PERMISO
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SEG_PERFIL_USR') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SEG_PERFIL_USR
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SEG_PERMISO_PERFIL') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SEG_PERMISO_PERFIL
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SMS_CTE_PROV') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SMS_CTE_PROV
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SMS_PRODUCTO') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SMS_PRODUCTO
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SMS_PROD_CTEPROV') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SMS_PROD_CTEPROV
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('SMS_MOVIMIENTO') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE SMS_MOVIMIENTO
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FWK_CAT_APPS') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE dbo.FWK_CAT_APPS
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FWK_CAT_ADMIN') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE dbo.FWK_CAT_ADMIN
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FWK_CAT_CONTENT') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE dbo.FWK_CAT_CONTENT
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FWK_ACTION_ITEM') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE dbo.FWK_ACTION_ITEM
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FWK_CORREO_TEMPLATE') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE dbo.FWK_CORREO_TEMPLATE
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FWK_CORREO_PEND') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE dbo.FWK_CORREO_PEND
;

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('dbo.FWK_LOGGER') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE dbo.FWK_LOGGER
;


CREATE TABLE SEG_USUARIO ( 
	Id numeric(10) identity(1,1)  NOT NULL,
	User_Id varchar(20) NOT NULL,
	NombreUsuario varchar(75),
	ApPaterno varchar(75),
	ApMaterno varchar(75),
	CorreoE varchar(100),
	Estatus smallint DEFAULT 1 NOT NULL
)
;

CREATE TABLE SEG_PERFIL ( 
	Id numeric(5) identity(1,1)  NOT NULL,
	Perfil varchar(50) NOT NULL,
	Estatus smallint DEFAULT 1 NOT NULL
)
;

CREATE TABLE SEG_PERMISO ( 
	Id numeric(5) identity(1,1)  NOT NULL,
	Permiso varchar(150),
	Estatus smallint DEFAULT 1 NOT NULL
)
;

CREATE TABLE SEG_PERFIL_USR ( 
	IdUsuario numeric(10) NOT NULL,
	IdPerfil numeric(5) NOT NULL
)
;

CREATE TABLE SEG_PERMISO_PERFIL ( 
	IdPerfil numeric(5) NOT NULL,
	IdPermiso numeric(5) NOT NULL
)
;

CREATE TABLE SMS_CTE_PROV ( 
	Id numeric(10) NOT NULL,
	EsProveedor smallint DEFAULT 1 NOT NULL,
	Clave varchar(50) NOT NULL,
	Nombre varchar(100) NOT NULL,
	RazonSocial varchar(200),
	IdSAP varchar(50),
	Estatus smallint DEFAULT 1 NOT NULL,
	SalidaContingencia smallint DEFAULT 0 NOT NULL,
	Created_On datetime NOT NULL,
	Created_By numeric(10) NOT NULL,
	Updated_On datetime,
	Updated_By numeric(10)
)
;

CREATE TABLE SMS_PRODUCTO ( 
	Id numeric(10) NOT NULL,
	Clave varchar(50) NOT NULL,
	Nombre varchar(100) NOT NULL,
	IdSAP varchar(50),
	Estatus smallint DEFAULT 1 NOT NULL,
	Created_On datetime NOT NULL,
	Created_By numeric(10) NOT NULL,
	Updated_On datetime,
	Updated_By numeric(10)
)
;

CREATE TABLE SMS_PROD_CTEPROV ( 
	IdCteProv numeric(10) NOT NULL,
	IdProducto numeric(10) NOT NULL
)
;

CREATE TABLE SMS_MOVIMIENTO ( 
	Id bigint NOT NULL,
	EsMovCliente smallint DEFAULT 0 NOT NULL,
	IdCteProveedor numeric(10) NOT NULL,
	IdProducto numeric(10) NOT NULL,
	IdCteProvSAP varchar(50),
	IdProductoSAP varchar(50),
	PlacaVehiculo varchar(7) NOT NULL,
	Destino varchar(50),
	Factura varchar(50),
	FechaEntrada datetime NOT NULL,
	PesoEntrada numeric(10,4) NOT NULL,
	IdUsrPesoEntrada numeric(10) NOT NULL,
	FechaSalida datetime,
	PesoSalida numeric(10,4),
	IdUsrPesoSalida numeric(10),
	BasculaContingencia smallint DEFAULT 0 NOT NULL,
	GuardiaContingencia varchar(75),
	PesoNeto numeric(10,4),
	PesoTara numeric(10,4),
	EnviarSAP smallint DEFAULT 0 NOT NULL,
	EnviadoSAP smallint DEFAULT 0 NOT NULL,
	FechaEnviadoSAP datetime,
	IdUsrEnvioSAP numeric(10),
	Cancelado smallint DEFAULT 0 NOT NULL,
	MotivoCancela varchar(250),
	IdUsrCancela numeric(10)
)
;

CREATE TABLE dbo.FWK_CAT_APPS ( 
	ID_APP numeric(4) identity(1,1)  NOT NULL,
	APPLICATION_NAME varchar(50) NOT NULL,
	CREATED_ON datetime,
	CREATED_BY varchar(15),
	UPDATED_ON datetime,
	UPDATED_BY varchar(15),
	STATUS numeric(3)
)
;

CREATE TABLE dbo.FWK_CAT_ADMIN ( 
	ID_ADMIN numeric(4) identity(1,1)  NOT NULL,
	ID_APP numeric(4) NOT NULL,
	DESCRIPTION varchar(100),
	CREATED_ON datetime,
	CREATED_BY varchar(15),
	UPDATED_ON datetime,
	UPDATED_BY varchar(15),
	STATUS numeric(3)
)
;

CREATE TABLE dbo.FWK_CAT_CONTENT ( 
	ID_CONTENT numeric(18) identity(1,1)  NOT NULL,
	ID_APP numeric(4) NOT NULL,
	ID_ADMIN numeric(4) NOT NULL,
	KEY_VALUE varchar(25),
	VALUE varchar(50),
	DESCRIPTION varchar(250),
	CREATED_ON datetime,
	CREATED_BY varchar(15),
	UPDATED_ON datetime,
	UPDATED_BY varchar(15),
	STATUS numeric(3)
)
;

CREATE TABLE dbo.FWK_ACTION_ITEM ( 
	ID numeric(5) NOT NULL,
	ENABLED smallint DEFAULT 1 NOT NULL,
	ICONURL varchar(255),
	LABEL varchar(255),
	URL varchar(255),
	PARENT_ID numeric(5),
	ORDERHINT numeric(5)
)
;

CREATE TABLE dbo.FWK_CORREO_TEMPLATE ( 
	ID nchar(5) NOT NULL,
	APPS_ID numeric(4),
	MAILTO varchar(200),
	MAILCC varchar(200),
	MAILBCC varchar(200),
	MAILSUBJECT varchar(150),
	MAILBODY varchar(2500),
	MAILATTACH varchar(2500),
	MAILIMAGES varchar(200),
	FECHACREACION datetime,
	USUARIOCREACION nvarchar(20),
	FECHAACTUALIZA datetime,
	USUARIOACTUALIZA varchar(20),
	ESTATUS smallint DEFAULT 1
)
;

CREATE TABLE dbo.FWK_CORREO_PEND ( 
	ID numeric(12) NOT NULL,
	APPS_ID numeric(4) NOT NULL,
	TSMENSAJE datetime NOT NULL,
	LENVIADO numeric(3) NOT NULL,
	BMENSAJE varbinary(max),
	TSENVIADO datetime
)
;

CREATE TABLE dbo.FWK_LOGGER ( 
	ID numeric(12) NOT NULL,
	APPS_ID numeric(4),
	TSEVENTO datetime,
	TSBASEDATOS datetime,
	NIVEL varchar(10),
	CLASE varchar(100),
	METODO varchar(100),
	LINEA numeric(10),
	MENSAJE varchar(1000),
	STACKTRACE varchar(4000),
	USERID varchar(20)
)
;


ALTER TABLE SEG_USUARIO
	ADD CONSTRAINT UQ_SEG_USUARIO_User_Id UNIQUE (User_Id)
;

ALTER TABLE SEG_USUARIO
	ADD CONSTRAINT CK_ESTATUS_USR CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE SEG_PERFIL
	ADD CONSTRAINT UQ_SEG_PERFIL_Perfil UNIQUE (Perfil)
;

ALTER TABLE SEG_PERFIL
	ADD CONSTRAINT CK_ESTATUS_PERFIL CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE SEG_PERMISO
	ADD CONSTRAINT UQ_SEG_PERMISO_Permiso UNIQUE (Permiso)
;

ALTER TABLE SEG_PERMISO
	ADD CONSTRAINT CK_ESTATUS_PERMISO CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE SMS_CTE_PROV
	ADD CONSTRAINT UQ_SMS_CTE_PROV_IdSAP UNIQUE (IdSAP)
;

ALTER TABLE SMS_CTE_PROV
	ADD CONSTRAINT UQ_SMS_CTE_PROV_Clave UNIQUE (Clave)
;

ALTER TABLE SMS_CTE_PROV
	ADD CONSTRAINT CK_ES_PROV CHECK (EsProveedor BETWEEN 0 AND 1)
;

ALTER TABLE SMS_CTE_PROV
	ADD CONSTRAINT CK_ESTATUS_CTEPROV CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE SMS_PRODUCTO
	ADD CONSTRAINT UQ_SMS_PROD_CTEPROV_IdSAP UNIQUE (IdSAP)
;

ALTER TABLE SMS_PRODUCTO
	ADD CONSTRAINT UQ_SMS_PROD_CTEPROV_Clave UNIQUE (Clave)
;

ALTER TABLE SMS_PRODUCTO
	ADD CONSTRAINT CK_ESTATUS_PROD_CTEPROV CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE SMS_MOVIMIENTO
	ADD CONSTRAINT CK_MOV_ESMOVCTE CHECK (EsMovCliente BETWEEN 0 AND 1)
;

ALTER TABLE SMS_MOVIMIENTO
	ADD CONSTRAINT CK_MOV_BASCULACONTIN CHECK (BasculaContingencia BETWEEN 0 AND 1)
;

ALTER TABLE SMS_MOVIMIENTO
	ADD CONSTRAINT CK_MOV_ENVIARSAP CHECK (EnviarSAP BETWEEN 0 AND 1)
;

ALTER TABLE SMS_MOVIMIENTO
	ADD CONSTRAINT CK_MOV_ENVIADOSAP CHECK (EnviadoSAP BETWEEN 0 AND 1)
;

ALTER TABLE SMS_MOVIMIENTO
	ADD CONSTRAINT CK_MOV_CANCELADO CHECK (Cancelado BETWEEN 0 AND 1)
;

ALTER TABLE dbo.FWK_CAT_APPS
	ADD CONSTRAINT UQ_CAT_APPS UNIQUE (APPLICATION_NAME)
;

ALTER TABLE dbo.FWK_CAT_ADMIN
	ADD CONSTRAINT UQ_APP_ADMIN UNIQUE (ID_APP, DESCRIPTION)
;

ALTER TABLE dbo.FWK_CAT_CONTENT
	ADD CONSTRAINT UQ_ADMIN_KEY UNIQUE (ID_ADMIN, KEY_VALUE)
;

ALTER TABLE dbo.FWK_CORREO_PEND
	ADD CONSTRAINT UQ_FWK_CORREO_PEND_ID UNIQUE (ID)
;

ALTER TABLE SEG_USUARIO ADD CONSTRAINT PK_SEG_USUARIO 
	PRIMARY KEY CLUSTERED (Id)
;

ALTER TABLE SEG_PERFIL ADD CONSTRAINT PK_SEG_PERFIL 
	PRIMARY KEY CLUSTERED (Id)
;

ALTER TABLE SEG_PERMISO ADD CONSTRAINT PK_SEG_PERMISO 
	PRIMARY KEY CLUSTERED (Id)
;

ALTER TABLE SEG_PERFIL_USR ADD CONSTRAINT PK_SEG_PERFIL_USR 
	PRIMARY KEY CLUSTERED (IdUsuario, IdPerfil)
;

ALTER TABLE SEG_PERMISO_PERFIL ADD CONSTRAINT PK_SEG_PERMISO_PERFIL 
	PRIMARY KEY CLUSTERED (IdPerfil, IdPermiso)
;

ALTER TABLE SMS_CTE_PROV ADD CONSTRAINT PK_SMS_CTE_PROV 
	PRIMARY KEY CLUSTERED (Id)
;

ALTER TABLE SMS_PRODUCTO ADD CONSTRAINT PK_SMS_PRODUCTO 
	PRIMARY KEY CLUSTERED (Id)
;

ALTER TABLE SMS_PROD_CTEPROV ADD CONSTRAINT PK_SMS_PROD_CTEPROV 
	PRIMARY KEY CLUSTERED (IdCteProv, IdProducto)
;

ALTER TABLE SMS_MOVIMIENTO ADD CONSTRAINT PK_SMS_MOVIMIENTO 
	PRIMARY KEY CLUSTERED (Id)
;

ALTER TABLE dbo.FWK_CAT_APPS ADD CONSTRAINT PK_CUPS_FWK_CAT_APPS 
	PRIMARY KEY CLUSTERED (ID_APP)
;

ALTER TABLE dbo.FWK_CAT_ADMIN ADD CONSTRAINT PK_CUPS_FWK_CAT_ADMIN 
	PRIMARY KEY CLUSTERED (ID_ADMIN)
;

ALTER TABLE dbo.FWK_CAT_CONTENT ADD CONSTRAINT PK_CUPS_FWK_CAT_CONTENT 
	PRIMARY KEY CLUSTERED (ID_CONTENT)
;

ALTER TABLE dbo.FWK_ACTION_ITEM ADD CONSTRAINT PK_FWK_ACTION_ITEM 
	PRIMARY KEY CLUSTERED (ID)
;

ALTER TABLE dbo.FWK_CORREO_TEMPLATE ADD CONSTRAINT PK_FWK_CORREO_TEMPLATE 
	PRIMARY KEY CLUSTERED (ID)
;

ALTER TABLE dbo.FWK_CORREO_PEND ADD CONSTRAINT PK_FWK_CORREO_PEND 
	PRIMARY KEY CLUSTERED (ID)
;

ALTER TABLE dbo.FWK_LOGGER ADD CONSTRAINT PK_FWK_LOGGER 
	PRIMARY KEY CLUSTERED (ID)
;



ALTER TABLE SEG_PERFIL_USR ADD CONSTRAINT FK_SEG_PERFIL_USR_SEG_PERFIL 
	FOREIGN KEY (IdPerfil) REFERENCES SEG_PERFIL (Id)
;

ALTER TABLE SEG_PERFIL_USR ADD CONSTRAINT FK_SEG_PERFIL_USR_SEG_USUARIO 
	FOREIGN KEY (IdUsuario) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE SEG_PERMISO_PERFIL ADD CONSTRAINT FK_SEG_PERMISO_PERFIL_SEG_PERF 
	FOREIGN KEY (IdPerfil) REFERENCES SEG_PERFIL (Id)
;

ALTER TABLE SEG_PERMISO_PERFIL ADD CONSTRAINT FK_SEG_PERMISO_PERFIL_SEG_PERM 
	FOREIGN KEY (IdPermiso) REFERENCES SEG_PERMISO (Id)
;

ALTER TABLE SMS_CTE_PROV ADD CONSTRAINT FK_SMS_CTE_PROV_USUARIO_CREA 
	FOREIGN KEY (Created_By) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE SMS_CTE_PROV ADD CONSTRAINT FK_SMS_CTE_PROV_USUARIO_UPD 
	FOREIGN KEY (Updated_By) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE SMS_PRODUCTO ADD CONSTRAINT FK_SMS_PROD_CTEPROV_USUARIO_CREA 
	FOREIGN KEY (Created_By) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE SMS_PRODUCTO ADD CONSTRAINT FK_SMS_PROD_CTEPROV_USUARIO_UPD 
	FOREIGN KEY (Updated_By) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE SMS_PROD_CTEPROV ADD CONSTRAINT FK_SMS_PROD_CTEPROV_SMS_CTE_PROV 
	FOREIGN KEY (IdCteProv) REFERENCES SMS_CTE_PROV (Id)
;

ALTER TABLE SMS_PROD_CTEPROV ADD CONSTRAINT FK_SMS_PROD_CTEPROV_SMS_PRODUCTO 
	FOREIGN KEY (IdProducto) REFERENCES SMS_PRODUCTO (Id)
;

ALTER TABLE SMS_MOVIMIENTO ADD CONSTRAINT FK_SMS_MOVIMIENTO_SEG_USUARIO 
	FOREIGN KEY (IdUsrCancela) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE SMS_MOVIMIENTO ADD CONSTRAINT FK_SMS_MOVIMIENTO_SMS_CTE_PROV 
	FOREIGN KEY (IdCteProveedor) REFERENCES SMS_CTE_PROV (Id)
;

ALTER TABLE SMS_MOVIMIENTO ADD CONSTRAINT FK_SMS_MOVIMIENTO_USUARIO_ENT 
	FOREIGN KEY (IdUsrPesoEntrada) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE SMS_MOVIMIENTO ADD CONSTRAINT FK_SMS_MOVIMIENTO_USUARIO_SAL 
	FOREIGN KEY (IdUsrPesoSalida) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE SMS_MOVIMIENTO ADD CONSTRAINT FK_SMS_MOVIMIENTO_USUARIO_SAP 
	FOREIGN KEY (IdUsrEnvioSAP) REFERENCES SEG_USUARIO (Id)
;

ALTER TABLE dbo.FWK_CORREO_TEMPLATE ADD CONSTRAINT FK_FWK_CORREO_TEMPLATE_FWK_CAT 
	FOREIGN KEY (APPS_ID) REFERENCES dbo.FWK_CAT_APPS (ID_APP)
;

ALTER TABLE dbo.FWK_CORREO_PEND ADD CONSTRAINT FK_FWK_CORREO_PEND_FWK_CAT_APP 
	FOREIGN KEY (APPS_ID) REFERENCES dbo.FWK_CAT_APPS (ID_APP)
;

ALTER TABLE dbo.FWK_LOGGER ADD CONSTRAINT FK_FWK_LOGGER_FWK_CAT_APPS 
	FOREIGN KEY (APPS_ID) REFERENCES dbo.FWK_CAT_APPS (ID_APP)
;









EXEC sp_addextendedproperty 'MS_Description', 'Tabla que almacena la información de los usuarios que están registrados en el sistema.  Esta tabla estará vacía para los sistemas que empleen TAM para autenticar.', 'Schema', dbo, 'table', SEG_USUARIO
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena todos los perfiles que pueden asignarse a los usuarios en el sistema.', 'Schema', dbo, 'table', SEG_PERFIL
;

EXEC sp_addextendedproperty 'MS_Description', 'Tabla que almacena la lista de permisos posibles a asignar en el sistema.', 'Schema', dbo, 'table', SEG_PERMISO
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena los perfiles asociados al usuario, no se guarda históricos, solo la información vigente es necesaria. Esta tabla estará vacía para los sistemas que empleen TAM para autenticar.', 'Schema', dbo, 'table', SEG_PERFIL_USR
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena los diferentes permisos que se asocian a un perfil de usuario. Si se tiene asignado permisos o perfiles que estén inactivos, el permiso no debe agregarse al usuario.', 'Schema', dbo, 'table', SEG_PERMISO_PERFIL
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla se encarga de almacenar la información de los clientes y proveedores que se emplearán en el sistema.', 'Schema', dbo, 'table', SMS_CTE_PROV
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla registra todos los productos que puede ingresar o retirar un cliente o proveedor.', 'Schema', dbo, 'table', SMS_PRODUCTO
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena todos los productos que puede manejar un cliente o proveedor.', 'Schema', dbo, 'table', SMS_PROD_CTEPROV
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena todos los movimientos de entrada y salida que se generan para clientes y proveedores.', 'Schema', dbo, 'table', SMS_MOVIMIENTO
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena los correos que por alguna razón no pudieron ser enviados en el momento de generarlos. Esto puede deberse a falta de comunicación con el servidor de correos o correos masivos que se envían por bloques en lugar de enviar todos juntos.', 'Schema', dbo, 'table', FWK_CORREO_PEND
;
