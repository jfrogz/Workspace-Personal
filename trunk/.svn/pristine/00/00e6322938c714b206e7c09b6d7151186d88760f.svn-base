/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.0 		*/
/*  Created On : 18-feb-2015 03:48:49 p.m. 				*/
/*  DBMS       : SQL Server 2008 						*/
/* ---------------------------------------------------- */

USE [sms]
;

/* Drop Foreign Key Constraints */

ALTER TABLE [SEG_PERFIL_USR] DROP CONSTRAINT [FK_SEG_PERFIL_USR_SEG_PERFIL]
;

ALTER TABLE [SEG_PERFIL_USR] DROP CONSTRAINT [FK_SEG_PERFIL_USR_SEG_USUARIO]
;

ALTER TABLE [SEG_PERMISO_PERFIL] DROP CONSTRAINT [FK_SEG_PERMISO_PERFIL_SEG_PERF]
;

ALTER TABLE [SEG_PERMISO_PERFIL] DROP CONSTRAINT [FK_SEG_PERMISO_PERFIL_SEG_PERM]
;

ALTER TABLE [SMS_CTE_PROV] DROP CONSTRAINT [FK_SMS_CTE_PROV_USUARIO_CREA]
;

ALTER TABLE [SMS_CTE_PROV] DROP CONSTRAINT [FK_SMS_CTE_PROV_USUARIO_UPD]
;

ALTER TABLE [SMS_PRODUCTO] DROP CONSTRAINT [FK_SMS_PROD_CTEPROV_USUARIO_CREA]
;

ALTER TABLE [SMS_PRODUCTO] DROP CONSTRAINT [FK_SMS_PROD_CTEPROV_USUARIO_UPD]
;

ALTER TABLE [SMS_PROD_CTEPROV] DROP CONSTRAINT [FK_SMS_PROD_CTEPROV_SMS_CTE_PROV]
;

ALTER TABLE [SMS_PROD_CTEPROV] DROP CONSTRAINT [FK_SMS_PROD_CTEPROV_SMS_PRODUCTO]
;

ALTER TABLE [SMS_MOVIMIENTO] DROP CONSTRAINT [FK_SMS_MOVIMIENTO_SEG_USUARIO]
;

ALTER TABLE [SMS_MOVIMIENTO] DROP CONSTRAINT [FK_SMS_MOVIMIENTO_SMS_CTE_PROV]
;

ALTER TABLE [SMS_MOVIMIENTO] DROP CONSTRAINT [FK_SMS_MOVIMIENTO_SMS_PROD_CTEPROV]
;

ALTER TABLE [SMS_MOVIMIENTO] DROP CONSTRAINT [FK_SMS_MOVIMIENTO_USUARIO_ENT]
;

ALTER TABLE [SMS_MOVIMIENTO] DROP CONSTRAINT [FK_SMS_MOVIMIENTO_USUARIO_SAL]
;

ALTER TABLE [SMS_MOVIMIENTO] DROP CONSTRAINT [FK_SMS_MOVIMIENTO_USUARIO_SAP]
;

ALTER TABLE [dbo].[FWK_CAT_ADMIN] DROP CONSTRAINT [FK_CAT_ADMIN_CAT_APPS]
;

ALTER TABLE [dbo].[FWK_CAT_CONTENT] DROP CONSTRAINT [FK_CAT_CONTENT_CAT_ADMIN]
;

ALTER TABLE [dbo].[FWK_CAT_CONTENT] DROP CONSTRAINT [FK_CAT_CONTENT_CAT_APPS]
;

ALTER TABLE [dbo].[FWK_CORREO_TEMPLATE] DROP CONSTRAINT [FK_FWK_CORREO_TEMPLATE_FWK_CAT]
;

ALTER TABLE [dbo].[FWK_CORREO_PEND] DROP CONSTRAINT [FK_FWK_CORREO_PEND_FWK_CAT_APP]
;

ALTER TABLE [dbo].[FWK_LOGGER] DROP CONSTRAINT [FK_FWK_LOGGER_FWK_CAT_APPS]
;

/* Drop Tables */

DROP TABLE [SEG_USUARIO]
;

DROP TABLE [SEG_PERFIL]
;

DROP TABLE [SEG_PERMISO]
;

DROP TABLE [SEG_PERFIL_USR]
;

DROP TABLE [SEG_PERMISO_PERFIL]
;

DROP TABLE [SMS_CTE_PROV]
;

DROP TABLE [SMS_PRODUCTO]
;

DROP TABLE [SMS_PROD_CTEPROV]
;

DROP TABLE [SMS_MOVIMIENTO]
;

DROP TABLE [dbo].[FWK_CAT_APPS]
;

DROP TABLE [dbo].[FWK_CAT_ADMIN]
;

DROP TABLE [dbo].[FWK_CAT_CONTENT]
;

DROP TABLE [dbo].[FWK_ACTION_ITEM]
;

DROP TABLE [dbo].[FWK_CORREO_TEMPLATE]
;

DROP TABLE [dbo].[FWK_CORREO_PEND]
;

DROP TABLE [dbo].[FWK_LOGGER]
;

/* Create Tables */

CREATE TABLE [SEG_USUARIO]
(
	[Id] numeric(10) NOT NULL IDENTITY (1, 1),    -- Identificador del usuario en el sistema, permite vincular información en el sistema
	[User_Id] varchar(20) NOT NULL,    -- Identificador del usuario en el sistema, empleado solo para la validación en el directorio activo y obtener el ID para el resto de las operaciones.
	[NombreUsuario] varchar(75),    -- Nombre del usuario.
	[ApPaterno] varchar(75),    -- Apellido Paterno del usuario
	[ApMaterno] varchar(75),    -- Apellido Materno del usuario
	[CorreoE] varchar(100),    -- Correo electrónico del usuario
	[Estatus] smallint NOT NULL DEFAULT 1    -- Estatus del usuario en el sistema, valores posibles 0=inactivo, 1=activo
)
;

CREATE TABLE [SEG_PERFIL]
(
	[Id] numeric(5) NOT NULL IDENTITY (1, 1),    -- Identificador del perfil dentro del sistema.
	[Perfil] varchar(50) NOT NULL,    -- Nombre del perfil en el sistema, es una cadena única dentro de la tabla.
	[Estatus] smallint NOT NULL DEFAULT 1    -- Estatus del perfil en el sistema, valores posibles 0=inactivo, 1=activo. Si está inactivo el perfil sus permisos no deben considerarse.
)
;

CREATE TABLE [SEG_PERMISO]
(
	[Id] numeric(5) NOT NULL IDENTITY (1, 1),    -- Identificador del permiso en el sistema.
	[Permiso] varchar(150),    -- Nombre del permiso en el sistema, posteriormente se asignará a los perfiles.
	[Estatus] smallint NOT NULL DEFAULT 1    -- Estatus del permiso en el sistema, valores posibles 0=inactivo, 1=activo. Si está inactivo el permiso no debe agregarse a los accesos del usuario.
)
;

CREATE TABLE [SEG_PERFIL_USR]
(
	[IdUsuario] numeric(10) NOT NULL,    -- Identificador del usuario en el sistema, el usuario debe estar registrado en SEG_Usuario
	[IdPerfil] numeric(5) NOT NULL    -- Identificador del perfil de usuario que se asigna, debe estar registrado en la tabla SEG_Perfil
)
;

CREATE TABLE [SEG_PERMISO_PERFIL]
(
	[IdPerfil] numeric(5) NOT NULL,    -- Identificador del perfil al que se asocia el permiso
	[IdPermiso] numeric(5) NOT NULL    -- Identificador del permiso asociado al perfil.
)
;

CREATE TABLE [SMS_CTE_PROV]
(
	[Id] numeric(10) NOT NULL IDENTITY (1, 1),    -- Identificador del cliente o proveedor en el sistema.
	[EsProveedor] smallint NOT NULL DEFAULT 1,    -- Indica si el registro es de un proveedor, 1=Proveedor, 2=Cliente
	[Clave] varchar(50) NOT NULL,    -- Clave de búsqueda de cliente o proveedor para los usuarios finales
	[Nombre] varchar(100) NOT NULL,    -- Nombre con el que se conoce al cliente o proveedor.
	[RazonSocial] varchar(200),    -- Razón social del cliente o proveedor
	[IdSAP] varchar(50),    -- Identificador del cliente o proveedor en SAP
	[Estatus] smallint NOT NULL DEFAULT 1,    -- Estatus del cliente o proveedor, 1=Activo, 0=Inactivo
	[SalidaContingencia] smallint NOT NULL DEFAULT 0,    -- Indica si el cliente puede salir cuando hay contingencia SAP. 1=Puede salir en contingencia, 0=No puede salir en contingencia.
	[Created_On] datetime NOT NULL,    -- Fecha y Hora de creación del registro.
	[Created_By] numeric(10) NOT NULL,    -- Identificador del usuario que creó el registro.
	[Updated_On] datetime,    -- Fecha y hora de última actualización de registro
	[Updated_By] numeric(10)    -- Identificador del usuario que actualizó por última vez el registro.
)
;

CREATE TABLE [SMS_PRODUCTO]
(
	[Id] numeric(10) NOT NULL IDENTITY (1, 1),    -- Identificador del producto en el sistema
	[Clave] varchar(50) NOT NULL,    -- Clave del producto para realizar las búsquedas por los operadores.
	[Nombre] varchar(100) NOT NULL,    -- Nombre del producto del cliente o proveedor.
	[IdSAP] varchar(50),    -- Identificador del producto en SAP.
	[Estatus] smallint NOT NULL DEFAULT 1,    -- Estatus del producto, 1=Activo, 0=Inactivo
	[Created_On] datetime NOT NULL,    -- Fecha y hora de creación del registro
	[Created_By] numeric(10) NOT NULL,    -- Identificador del usuario que creó el registro
	[Updated_On] datetime,    -- Fecha y hora de actualización del registro.
	[Updated_By] numeric(10)    -- Identificador del usuario que actualizó el registro por última vez.
)
;

CREATE TABLE [SMS_PROD_CTEPROV]
(
	[IdCteProv] numeric(10) NOT NULL,    -- Identificador del cliente o proveedor
	[IdProducto] numeric(10) NOT NULL    -- Identificador del producto que maneja el cliente o proveedor
)
;

CREATE TABLE [SMS_MOVIMIENTO]
(
	[Id] bigint NOT NULL IDENTITY (1, 1),    -- Identificador del movimiento
	[EsMovCliente] smallint NOT NULL DEFAULT 0,    -- Indica si el movimiento generado corresponde a movimiento de cliente o de proveedor. Permite filtrado rápido de información.
	[IdCteProveedor] numeric(10) NOT NULL,    -- Identificador del cliente o proveedor.
	[IdProducto] numeric(10) NOT NULL,    -- Identificador del producto a ingresar o retirar
	[IdCteProvSAP] varchar(50),    -- Identificador del cliente o proveedor en SAP en el momento de la generación del movimiento.
	[IdProductoSAP] varchar(50),    -- Identificador del producto en SAP en el momento de la generación del movimiento.
	[PlacaVehiculo] varchar(7) NOT NULL,    -- Contiene el número de la matrícula del vehículo
	[Destino] varchar(50),    -- Destino de la unidad que ingresa
	[Factura] varchar(50),    -- Número de factura para el caso de proveedores.
	[FechaEntrada] datetime NOT NULL,    -- Fecha y hora de entrada del vehículo
	[PesoEntrada] numeric(10,4) NOT NULL,    -- Peso del vehículo a la entrada
	[IdUsrPesoEntrada] numeric(10) NOT NULL,    -- Identificador del usuario que registró la entrada
	[FechaSalida] datetime,    -- Fecha y hora de salida del vehículo
	[PesoSalida] numeric(10,4),    -- Peso de salida del vehículo
	[IdUsrPesoSalida] numeric(10),    -- Identificador del usuario que registró el peso de salida.
	[BasculaContingEntrada] smallint NOT NULL DEFAULT 0,    -- Indica si el peso de entrada se obtuvo en báscula interna o del proveedor (contingencia). 1=Contingencia, 0=Interna
	[GuardiaContingEntrada] varchar(75),    -- Contiene el nombre del guardia de seguridad que realizó el pesaje de entrada con contingencia en la báscula del cliente.
	[BasculaContingSalida] smallint NOT NULL DEFAULT 0,    -- Indica si el peso de salida se obtuvo en báscula interna o del proveedor (contingencia). 1=Contingencia, 0=Interna
	[GuardaContingSalida] varchar(75),    -- Contiene el nombre del guardia de seguridad que realizó el pesaje de salida con contingencia en la báscula del cliente.
	[PesoNeto] numeric(10,4),    -- Peso neto del material que ingresa o sale
	[PesoTara] numeric(10,4),    -- Indica el peso de la tara del movimiento
	[EnviarSAP] smallint NOT NULL DEFAULT 0,    -- Indica si debe enviarse a SAP el movimiento o no. 1=Debe Enviarse, 0=No debe enviarse
	[EnviadoSAP] smallint NOT NULL DEFAULT 0,    -- Indica si se envió a SAP o está pendiente de enviar. 1=Enviado, 0=No Enviado.
	[FechaEnviadoSAP] datetime,    -- Fecha y hora en que el registro fue enviado a SAP
	[IdUsrEnvioSAP] numeric(10),    -- Identificador del usuario que envió el registro a SAP
	[Cancelado] smallint NOT NULL DEFAULT 0,    -- Indica si el folio se encuentra cancelado o está activo. 1=Cancelado 0=Activo
	[MotivoCancela] varchar(250),    -- Motivo por el cual se cancela el folio
	[IdUsrCancela] numeric(10)    -- Identificador del usuario que cancela el registro
)
;

CREATE TABLE [dbo].[FWK_CAT_APPS]
(
	[ID_APP] numeric(4) NOT NULL IDENTITY (1, 1),
	[APPLICATION_NAME] varchar(50) NOT NULL,
	[CREATED_ON] datetime,
	[CREATED_BY] varchar(15),
	[UPDATED_ON] datetime,
	[UPDATED_BY] varchar(15),
	[STATUS] numeric(3)
)
;

CREATE TABLE [dbo].[FWK_CAT_ADMIN]
(
	[ID_ADMIN] numeric(4) NOT NULL IDENTITY (1, 1),
	[ID_APP] numeric(4) NOT NULL,
	[DESCRIPTION] varchar(100),
	[CREATED_ON] datetime,
	[CREATED_BY] varchar(15),
	[UPDATED_ON] datetime,
	[UPDATED_BY] varchar(15),
	[STATUS] numeric(3)
)
;

CREATE TABLE [dbo].[FWK_CAT_CONTENT]
(
	[ID_CONTENT] numeric(18) NOT NULL IDENTITY (1, 1),
	[ID_APP] numeric(4) NOT NULL,
	[ID_ADMIN] numeric(4) NOT NULL,
	[KEY_VALUE] varchar(25),
	[VALUE] varchar(50),
	[DESCRIPTION] varchar(250),
	[CREATED_ON] datetime,
	[CREATED_BY] varchar(15),
	[UPDATED_ON] datetime,
	[UPDATED_BY] varchar(15),
	[STATUS] numeric(3)
)
;

CREATE TABLE [dbo].[FWK_ACTION_ITEM]
(
	[ID] numeric(5) NOT NULL,
	[ENABLED] smallint NOT NULL DEFAULT 1,
	[ICONURL] varchar(255),
	[LABEL] varchar(255),
	[URL] varchar(255),
	[PARENT_ID] numeric(5),
	[ORDERHINT] numeric(5)
)
;

CREATE TABLE [dbo].[FWK_CORREO_TEMPLATE]
(
	[ID] nchar(5) NOT NULL,
	[APPS_ID] numeric(4),
	[MAILTO] varchar(200),
	[MAILCC] varchar(200),
	[MAILBCC] varchar(200),
	[MAILSUBJECT] varchar(150),
	[MAILBODY] varchar(2500),
	[MAILATTACH] varchar(2500),
	[MAILIMAGES] varchar(200),
	[FECHACREACION] datetime,
	[USUARIOCREACION] nvarchar(20),
	[FECHAACTUALIZA] datetime,
	[USUARIOACTUALIZA] varchar(20),
	[ESTATUS] smallint DEFAULT 1
)
;

CREATE TABLE [dbo].[FWK_CORREO_PEND]
(
	[ID] numeric(12) NOT NULL,    -- Identificador del correo pendiente, es un consecutivo.
	[APPS_ID] numeric(4) NOT NULL,    -- Identificador de la aplicación al que pertenece el correo pendiente.
	[TSMENSAJE] datetime NOT NULL,    -- Fecha y hora en la que fue enviado el mensaje originalmente.
	[LENVIADO] numeric(3) NOT NULL,    -- Estatus que indica si el correo ya fue enviado o sigue pendiente de envío. 0=No enviado; 1=Enviado.
	[BMENSAJE] varbinary(max),    -- Datos del correo electrónico, incluye archivos adjuntos, imágenes y lo necesario para poder enviar posteriormente.
	[TSENVIADO] datetime    -- Fecha y hora de envío del correo, una vez que se recibe respuesta de haber sido procesado.
)
;

CREATE TABLE [dbo].[FWK_LOGGER]
(
	[ID] numeric(12) NOT NULL,
	[APPS_ID] numeric(4),
	[TSEVENTO] datetime,
	[TSBASEDATOS] datetime,
	[NIVEL] varchar(10),
	[CLASE] varchar(100),
	[METODO] varchar(100),
	[LINEA] numeric(10),
	[MENSAJE] varchar(1000),
	[STACKTRACE] varchar(4000),
	[USERID] varchar(20)
)
;

/* Create Table Comments */

EXEC sp_addextendedproperty 'MS_Description', 'Tabla que almacena la información de los usuarios que están registrados en el sistema.  Esta tabla estará vacía para los sistemas que empleen TAM para autenticar.', 'Schema', [dbo], 'table', [SEG_USUARIO]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario en el sistema, permite vincular información en el sistema', 'Schema', [dbo], 'table', [SEG_USUARIO], 'column', [Id]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario en el sistema, empleado solo para la validación en el directorio activo y obtener el ID para el resto de las operaciones.', 'Schema', [dbo], 'table', [SEG_USUARIO], 'column', [User_Id]
;

EXEC sp_addextendedproperty 'MS_Description', 'Nombre del usuario.', 'Schema', [dbo], 'table', [SEG_USUARIO], 'column', [NombreUsuario]
;

EXEC sp_addextendedproperty 'MS_Description', 'Apellido Paterno del usuario', 'Schema', [dbo], 'table', [SEG_USUARIO], 'column', [ApPaterno]
;

EXEC sp_addextendedproperty 'MS_Description', 'Apellido Materno del usuario', 'Schema', [dbo], 'table', [SEG_USUARIO], 'column', [ApMaterno]
;

EXEC sp_addextendedproperty 'MS_Description', 'Correo electrónico del usuario', 'Schema', [dbo], 'table', [SEG_USUARIO], 'column', [CorreoE]
;

EXEC sp_addextendedproperty 'MS_Description', 'Estatus del usuario en el sistema, valores posibles 0=inactivo, 1=activo', 'Schema', [dbo], 'table', [SEG_USUARIO], 'column', [Estatus]
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena todos los perfiles que pueden asignarse a los usuarios en el sistema.', 'Schema', [dbo], 'table', [SEG_PERFIL]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del perfil dentro del sistema.', 'Schema', [dbo], 'table', [SEG_PERFIL], 'column', [Id]
;

EXEC sp_addextendedproperty 'MS_Description', 'Nombre del perfil en el sistema, es una cadena única dentro de la tabla.', 'Schema', [dbo], 'table', [SEG_PERFIL], 'column', [Perfil]
;

EXEC sp_addextendedproperty 'MS_Description', 'Estatus del perfil en el sistema, valores posibles 0=inactivo, 1=activo. Si está inactivo el perfil sus permisos no deben considerarse.', 'Schema', [dbo], 'table', [SEG_PERFIL], 'column', [Estatus]
;

EXEC sp_addextendedproperty 'MS_Description', 'Tabla que almacena la lista de permisos posibles a asignar en el sistema.', 'Schema', [dbo], 'table', [SEG_PERMISO]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del permiso en el sistema.', 'Schema', [dbo], 'table', [SEG_PERMISO], 'column', [Id]
;

EXEC sp_addextendedproperty 'MS_Description', 'Nombre del permiso en el sistema, posteriormente se asignará a los perfiles.', 'Schema', [dbo], 'table', [SEG_PERMISO], 'column', [Permiso]
;

EXEC sp_addextendedproperty 'MS_Description', 'Estatus del permiso en el sistema, valores posibles 0=inactivo, 1=activo. Si está inactivo el permiso no debe agregarse a los accesos del usuario.', 'Schema', [dbo], 'table', [SEG_PERMISO], 'column', [Estatus]
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena los perfiles asociados al usuario, no se guarda históricos, solo la información vigente es necesaria. Esta tabla estará vacía para los sistemas que empleen TAM para autenticar.', 'Schema', [dbo], 'table', [SEG_PERFIL_USR]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario en el sistema, el usuario debe estar registrado en SEG_Usuario', 'Schema', [dbo], 'table', [SEG_PERFIL_USR], 'column', [IdUsuario]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del perfil de usuario que se asigna, debe estar registrado en la tabla SEG_Perfil', 'Schema', [dbo], 'table', [SEG_PERFIL_USR], 'column', [IdPerfil]
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena los diferentes permisos que se asocian a un perfil de usuario. Si se tiene asignado permisos o perfiles que estén inactivos, el permiso no debe agregarse al usuario.', 'Schema', [dbo], 'table', [SEG_PERMISO_PERFIL]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del perfil al que se asocia el permiso', 'Schema', [dbo], 'table', [SEG_PERMISO_PERFIL], 'column', [IdPerfil]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del permiso asociado al perfil.', 'Schema', [dbo], 'table', [SEG_PERMISO_PERFIL], 'column', [IdPermiso]
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla se encarga de almacenar la información de los clientes y proveedores que se emplearán en el sistema.', 'Schema', [dbo], 'table', [SMS_CTE_PROV]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del cliente o proveedor en el sistema.', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [Id]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica si el registro es de un proveedor, 1=Proveedor, 2=Cliente', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [EsProveedor]
;

EXEC sp_addextendedproperty 'MS_Description', 'Clave de búsqueda de cliente o proveedor para los usuarios finales', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [Clave]
;

EXEC sp_addextendedproperty 'MS_Description', 'Nombre con el que se conoce al cliente o proveedor.', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [Nombre]
;

EXEC sp_addextendedproperty 'MS_Description', 'Razón social del cliente o proveedor', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [RazonSocial]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del cliente o proveedor en SAP', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [IdSAP]
;

EXEC sp_addextendedproperty 'MS_Description', 'Estatus del cliente o proveedor, 1=Activo, 0=Inactivo', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [Estatus]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica si el cliente puede salir cuando hay contingencia SAP. 1=Puede salir en contingencia, 0=No puede salir en contingencia.', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [SalidaContingencia]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y Hora de creación del registro.', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [Created_On]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario que creó el registro.', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [Created_By]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y hora de última actualización de registro', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [Updated_On]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario que actualizó por última vez el registro.', 'Schema', [dbo], 'table', [SMS_CTE_PROV], 'column', [Updated_By]
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla registra todos los productos que puede ingresar o retirar un cliente o proveedor.', 'Schema', [dbo], 'table', [SMS_PRODUCTO]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del producto en el sistema', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [Id]
;

EXEC sp_addextendedproperty 'MS_Description', 'Clave del producto para realizar las búsquedas por los operadores.', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [Clave]
;

EXEC sp_addextendedproperty 'MS_Description', 'Nombre del producto del cliente o proveedor.', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [Nombre]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del producto en SAP.', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [IdSAP]
;

EXEC sp_addextendedproperty 'MS_Description', 'Estatus del producto, 1=Activo, 0=Inactivo', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [Estatus]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y hora de creación del registro', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [Created_On]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario que creó el registro', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [Created_By]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y hora de actualización del registro.', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [Updated_On]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario que actualizó el registro por última vez.', 'Schema', [dbo], 'table', [SMS_PRODUCTO], 'column', [Updated_By]
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena todos los productos que puede manejar un cliente o proveedor.', 'Schema', [dbo], 'table', [SMS_PROD_CTEPROV]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del cliente o proveedor', 'Schema', [dbo], 'table', [SMS_PROD_CTEPROV], 'column', [IdCteProv]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del producto que maneja el cliente o proveedor', 'Schema', [dbo], 'table', [SMS_PROD_CTEPROV], 'column', [IdProducto]
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena todos los movimientos de entrada y salida que se generan para clientes y proveedores.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del movimiento', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [Id]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica si el movimiento generado corresponde a movimiento de cliente o de proveedor. Permite filtrado rápido de información.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [EsMovCliente]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del cliente o proveedor.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [IdCteProveedor]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del producto a ingresar o retirar', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [IdProducto]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del cliente o proveedor en SAP en el momento de la generación del movimiento.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [IdCteProvSAP]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del producto en SAP en el momento de la generación del movimiento.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [IdProductoSAP]
;

EXEC sp_addextendedproperty 'MS_Description', 'Contiene el número de la matrícula del vehículo', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [PlacaVehiculo]
;

EXEC sp_addextendedproperty 'MS_Description', 'Destino de la unidad que ingresa', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [Destino]
;

EXEC sp_addextendedproperty 'MS_Description', 'Número de factura para el caso de proveedores.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [Factura]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y hora de entrada del vehículo', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [FechaEntrada]
;

EXEC sp_addextendedproperty 'MS_Description', 'Peso del vehículo a la entrada', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [PesoEntrada]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario que registró la entrada', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [IdUsrPesoEntrada]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y hora de salida del vehículo', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [FechaSalida]
;

EXEC sp_addextendedproperty 'MS_Description', 'Peso de salida del vehículo', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [PesoSalida]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario que registró el peso de salida.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [IdUsrPesoSalida]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica si el peso de entrada se obtuvo en báscula interna o del proveedor (contingencia). 1=Contingencia, 0=Interna', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [BasculaContingEntrada]
;

EXEC sp_addextendedproperty 'MS_Description', 'Contiene el nombre del guardia de seguridad que realizó el pesaje de entrada con contingencia en la báscula del cliente.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [GuardiaContingEntrada]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica si el peso de salida se obtuvo en báscula interna o del proveedor (contingencia). 1=Contingencia, 0=Interna', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [BasculaContingSalida]
;

EXEC sp_addextendedproperty 'MS_Description', 'Contiene el nombre del guardia de seguridad que realizó el pesaje de salida con contingencia en la báscula del cliente.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [GuardaContingSalida]
;

EXEC sp_addextendedproperty 'MS_Description', 'Peso neto del material que ingresa o sale', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [PesoNeto]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica el peso de la tara del movimiento', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [PesoTara]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica si debe enviarse a SAP el movimiento o no. 1=Debe Enviarse, 0=No debe enviarse', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [EnviarSAP]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica si se envió a SAP o está pendiente de enviar. 1=Enviado, 0=No Enviado.', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [EnviadoSAP]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y hora en que el registro fue enviado a SAP', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [FechaEnviadoSAP]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario que envió el registro a SAP', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [IdUsrEnvioSAP]
;

EXEC sp_addextendedproperty 'MS_Description', 'Indica si el folio se encuentra cancelado o está activo. 1=Cancelado 0=Activo', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [Cancelado]
;

EXEC sp_addextendedproperty 'MS_Description', 'Motivo por el cual se cancela el folio', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [MotivoCancela]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del usuario que cancela el registro', 'Schema', [dbo], 'table', [SMS_MOVIMIENTO], 'column', [IdUsrCancela]
;

EXEC sp_addextendedproperty 'MS_Description', 'Esta tabla almacena los correos que por alguna razón no pudieron ser enviados en el momento de generarlos. Esto puede deberse a falta de comunicación con el servidor de correos o correos masivos que se envían por bloques en lugar de enviar todos juntos.', 'Schema', [dbo], 'table', [FWK_CORREO_PEND]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador del correo pendiente, es un consecutivo.', 'Schema', [dbo], 'table', [FWK_CORREO_PEND], 'column', [ID]
;

EXEC sp_addextendedproperty 'MS_Description', 'Identificador de la aplicación al que pertenece el correo pendiente.', 'Schema', [dbo], 'table', [FWK_CORREO_PEND], 'column', [APPS_ID]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y hora en la que fue enviado el mensaje originalmente.', 'Schema', [dbo], 'table', [FWK_CORREO_PEND], 'column', [TSMENSAJE]
;

EXEC sp_addextendedproperty 'MS_Description', 'Estatus que indica si el correo ya fue enviado o sigue pendiente de envío. 0=No enviado; 1=Enviado.', 'Schema', [dbo], 'table', [FWK_CORREO_PEND], 'column', [LENVIADO]
;

EXEC sp_addextendedproperty 'MS_Description', 'Datos del correo electrónico, incluye archivos adjuntos, imágenes y lo necesario para poder enviar posteriormente.', 'Schema', [dbo], 'table', [FWK_CORREO_PEND], 'column', [BMENSAJE]
;

EXEC sp_addextendedproperty 'MS_Description', 'Fecha y hora de envío del correo, una vez que se recibe respuesta de haber sido procesado.', 'Schema', [dbo], 'table', [FWK_CORREO_PEND], 'column', [TSENVIADO]
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [SEG_USUARIO] 
 ADD CONSTRAINT [PK_SEG_USUARIO]
	PRIMARY KEY CLUSTERED ([Id])
;

ALTER TABLE [SEG_USUARIO] 
 ADD CONSTRAINT [UQ_SEG_USUARIO_User_Id] UNIQUE NONCLUSTERED ([User_Id])
;

ALTER TABLE [SEG_USUARIO] 
 ADD CONSTRAINT [CK_ESTATUS_USR] CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE [SEG_PERFIL] 
 ADD CONSTRAINT [PK_SEG_PERFIL]
	PRIMARY KEY CLUSTERED ([Id])
;

ALTER TABLE [SEG_PERFIL] 
 ADD CONSTRAINT [UQ_SEG_PERFIL_Perfil] UNIQUE NONCLUSTERED ([Perfil])
;

ALTER TABLE [SEG_PERFIL] 
 ADD CONSTRAINT [CK_ESTATUS_PERFIL] CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE [SEG_PERMISO] 
 ADD CONSTRAINT [PK_SEG_PERMISO]
	PRIMARY KEY CLUSTERED ([Id])
;

ALTER TABLE [SEG_PERMISO] 
 ADD CONSTRAINT [UQ_SEG_PERMISO_Permiso] UNIQUE NONCLUSTERED ([Permiso])
;

ALTER TABLE [SEG_PERMISO] 
 ADD CONSTRAINT [CK_ESTATUS_PERMISO] CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE [SEG_PERFIL_USR] 
 ADD CONSTRAINT [PK_SEG_PERFIL_USR]
	PRIMARY KEY CLUSTERED ([IdUsuario],[IdPerfil])
;

ALTER TABLE [SEG_PERMISO_PERFIL] 
 ADD CONSTRAINT [PK_SEG_PERMISO_PERFIL]
	PRIMARY KEY CLUSTERED ([IdPerfil],[IdPermiso])
;

ALTER TABLE [SMS_CTE_PROV] 
 ADD CONSTRAINT [PK_SMS_CTE_PROV]
	PRIMARY KEY CLUSTERED ([Id])
;

ALTER TABLE [SMS_CTE_PROV] 
 ADD CONSTRAINT [UQ_SMS_CTE_PROV_IdSAP] UNIQUE NONCLUSTERED ([IdSAP])
;

ALTER TABLE [SMS_CTE_PROV] 
 ADD CONSTRAINT [UQ_SMS_CTE_PROV_Clave] UNIQUE NONCLUSTERED ([Clave])
;

ALTER TABLE [SMS_CTE_PROV] 
 ADD CONSTRAINT [CK_ES_PROV] CHECK (EsProveedor BETWEEN 0 AND 1)
;

ALTER TABLE [SMS_CTE_PROV] 
 ADD CONSTRAINT [CK_ESTATUS_CTEPROV] CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE [SMS_PRODUCTO] 
 ADD CONSTRAINT [UQ_SMS_PROD_CTEPROV_IdSAP] UNIQUE NONCLUSTERED ([IdSAP])
;

ALTER TABLE [SMS_PRODUCTO] 
 ADD CONSTRAINT [PK_SMS_PRODUCTO]
	PRIMARY KEY CLUSTERED ([Id])
;

ALTER TABLE [SMS_PRODUCTO] 
 ADD CONSTRAINT [UQ_SMS_PROD_CTEPROV_Clave] UNIQUE NONCLUSTERED ([Clave])
;

ALTER TABLE [SMS_PRODUCTO] 
 ADD CONSTRAINT [CK_ESTATUS_PROD_CTEPROV] CHECK (Estatus BETWEEN 0 AND 1)
;

ALTER TABLE [SMS_PROD_CTEPROV] 
 ADD CONSTRAINT [PK_SMS_PROD_CTEPROV]
	PRIMARY KEY CLUSTERED ([IdCteProv],[IdProducto])
;

ALTER TABLE [SMS_MOVIMIENTO] 
 ADD CONSTRAINT [PK_SMS_MOVIMIENTO]
	PRIMARY KEY CLUSTERED ([Id])
;

ALTER TABLE [SMS_MOVIMIENTO] 
 ADD CONSTRAINT [CK_MOV_ESMOVCTE] CHECK (EsMovCliente BETWEEN 0 AND 1)
;

ALTER TABLE [SMS_MOVIMIENTO] 
 ADD CONSTRAINT [CK_MOV_BASCULACONTIN] CHECK (BasculaContingencia BETWEEN 0 AND 1)
;

ALTER TABLE [SMS_MOVIMIENTO] 
 ADD CONSTRAINT [CK_MOV_ENVIARSAP] CHECK (EnviarSAP BETWEEN 0 AND 1)
;

ALTER TABLE [SMS_MOVIMIENTO] 
 ADD CONSTRAINT [CK_MOV_ENVIADOSAP] CHECK (EnviadoSAP BETWEEN 0 AND 1)
;

ALTER TABLE [SMS_MOVIMIENTO] 
 ADD CONSTRAINT [CK_MOV_CANCELADO] CHECK (Cancelado BETWEEN 0 AND 1)
;

ALTER TABLE [dbo].[FWK_CAT_APPS] 
 ADD CONSTRAINT [PK_CUPS_FWK_CAT_APPS]
	PRIMARY KEY CLUSTERED ([ID_APP])
;

ALTER TABLE [dbo].[FWK_CAT_APPS] 
 ADD CONSTRAINT [UQ_CAT_APPS] UNIQUE NONCLUSTERED ([APPLICATION_NAME])
;

ALTER TABLE [dbo].[FWK_CAT_ADMIN] 
 ADD CONSTRAINT [PK_CUPS_FWK_CAT_ADMIN]
	PRIMARY KEY CLUSTERED ([ID_ADMIN])
;

ALTER TABLE [dbo].[FWK_CAT_ADMIN] 
 ADD CONSTRAINT [UQ_APP_ADMIN] UNIQUE NONCLUSTERED ([ID_APP],[DESCRIPTION])
;

ALTER TABLE [dbo].[FWK_CAT_CONTENT] 
 ADD CONSTRAINT [PK_CUPS_FWK_CAT_CONTENT]
	PRIMARY KEY CLUSTERED ([ID_CONTENT])
;

ALTER TABLE [dbo].[FWK_CAT_CONTENT] 
 ADD CONSTRAINT [UQ_ADMIN_KEY] UNIQUE NONCLUSTERED ([ID_ADMIN],[KEY_VALUE])
;

ALTER TABLE [dbo].[FWK_ACTION_ITEM] 
 ADD CONSTRAINT [PK_FWK_ACTION_ITEM]
	PRIMARY KEY CLUSTERED ([ID])
;

ALTER TABLE [dbo].[FWK_CORREO_TEMPLATE] 
 ADD CONSTRAINT [PK_FWK_CORREO_TEMPLATE]
	PRIMARY KEY CLUSTERED ([ID])
;

ALTER TABLE [dbo].[FWK_CORREO_PEND] 
 ADD CONSTRAINT [UQ_FWK_CORREO_PEND_ID] UNIQUE NONCLUSTERED ([ID])
;

ALTER TABLE [dbo].[FWK_CORREO_PEND] 
 ADD CONSTRAINT [PK_FWK_CORREO_PEND]
	PRIMARY KEY CLUSTERED ([ID])
;

ALTER TABLE [dbo].[FWK_LOGGER] 
 ADD CONSTRAINT [PK_FWK_LOGGER]
	PRIMARY KEY CLUSTERED ([ID])
;

/* Create Foreign Key Constraints */

ALTER TABLE [SEG_PERFIL_USR] ADD CONSTRAINT [FK_SEG_PERFIL_USR_SEG_PERFIL]
	FOREIGN KEY ([IdPerfil]) REFERENCES [SEG_PERFIL] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SEG_PERFIL_USR] ADD CONSTRAINT [FK_SEG_PERFIL_USR_SEG_USUARIO]
	FOREIGN KEY ([IdUsuario]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SEG_PERMISO_PERFIL] ADD CONSTRAINT [FK_SEG_PERMISO_PERFIL_SEG_PERF]
	FOREIGN KEY ([IdPerfil]) REFERENCES [SEG_PERFIL] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SEG_PERMISO_PERFIL] ADD CONSTRAINT [FK_SEG_PERMISO_PERFIL_SEG_PERM]
	FOREIGN KEY ([IdPermiso]) REFERENCES [SEG_PERMISO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_CTE_PROV] ADD CONSTRAINT [FK_SMS_CTE_PROV_USUARIO_CREA]
	FOREIGN KEY ([Created_By]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_CTE_PROV] ADD CONSTRAINT [FK_SMS_CTE_PROV_USUARIO_UPD]
	FOREIGN KEY ([Updated_By]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_PRODUCTO] ADD CONSTRAINT [FK_SMS_PROD_CTEPROV_USUARIO_CREA]
	FOREIGN KEY ([Created_By]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_PRODUCTO] ADD CONSTRAINT [FK_SMS_PROD_CTEPROV_USUARIO_UPD]
	FOREIGN KEY ([Updated_By]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_PROD_CTEPROV] ADD CONSTRAINT [FK_SMS_PROD_CTEPROV_SMS_CTE_PROV]
	FOREIGN KEY ([IdCteProv]) REFERENCES [SMS_CTE_PROV] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_PROD_CTEPROV] ADD CONSTRAINT [FK_SMS_PROD_CTEPROV_SMS_PRODUCTO]
	FOREIGN KEY ([IdProducto]) REFERENCES [SMS_PRODUCTO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_MOVIMIENTO] ADD CONSTRAINT [FK_SMS_MOVIMIENTO_SEG_USUARIO]
	FOREIGN KEY ([IdUsrCancela]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_MOVIMIENTO] ADD CONSTRAINT [FK_SMS_MOVIMIENTO_SMS_CTE_PROV]
	FOREIGN KEY ([IdCteProveedor]) REFERENCES [SMS_CTE_PROV] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_MOVIMIENTO] ADD CONSTRAINT [FK_SMS_MOVIMIENTO_SMS_PROD_CTEPROV]
	FOREIGN KEY ([IdProducto]) REFERENCES  () ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_MOVIMIENTO] ADD CONSTRAINT [FK_SMS_MOVIMIENTO_USUARIO_ENT]
	FOREIGN KEY ([IdUsrPesoEntrada]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_MOVIMIENTO] ADD CONSTRAINT [FK_SMS_MOVIMIENTO_USUARIO_SAL]
	FOREIGN KEY ([IdUsrPesoSalida]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [SMS_MOVIMIENTO] ADD CONSTRAINT [FK_SMS_MOVIMIENTO_USUARIO_SAP]
	FOREIGN KEY ([IdUsrEnvioSAP]) REFERENCES [SEG_USUARIO] ([Id]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [dbo].[FWK_CAT_ADMIN] ADD CONSTRAINT [FK_CAT_ADMIN_CAT_APPS]
	FOREIGN KEY ([ID_APP]) REFERENCES  ()
;

ALTER TABLE [dbo].[FWK_CAT_CONTENT] ADD CONSTRAINT [FK_CAT_CONTENT_CAT_ADMIN]
	FOREIGN KEY ([ID_ADMIN]) REFERENCES  ()
;

ALTER TABLE [dbo].[FWK_CAT_CONTENT] ADD CONSTRAINT [FK_CAT_CONTENT_CAT_APPS]
	FOREIGN KEY ([ID_APP]) REFERENCES  ()
;

ALTER TABLE [dbo].[FWK_CORREO_TEMPLATE] ADD CONSTRAINT [FK_FWK_CORREO_TEMPLATE_FWK_CAT]
	FOREIGN KEY ([APPS_ID]) REFERENCES [dbo].[FWK_CAT_APPS] ([ID_APP]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [dbo].[FWK_CORREO_PEND] ADD CONSTRAINT [FK_FWK_CORREO_PEND_FWK_CAT_APP]
	FOREIGN KEY ([APPS_ID]) REFERENCES [dbo].[FWK_CAT_APPS] ([ID_APP]) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE [dbo].[FWK_LOGGER] ADD CONSTRAINT [FK_FWK_LOGGER_FWK_CAT_APPS]
	FOREIGN KEY ([APPS_ID]) REFERENCES [dbo].[FWK_CAT_APPS] ([ID_APP]) ON DELETE No Action ON UPDATE No Action
;
