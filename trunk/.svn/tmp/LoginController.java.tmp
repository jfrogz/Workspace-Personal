package mx.vw.swf.security.controller;

import io.datafx.controller.FXMLController;
import io.datafx.controller.flow.action.LinkAction;
import javafx.event.Event;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import mx.vw.swf.cdi.WeldJavaFXLauncher;
import mx.vw.swf.sms.service.SMSProveedorService;

import javax.inject.Inject;
import java.io.IOException;
import java.io.InputStream;

/**
 * Created by dzm152z on 08/01/2015.
 */
<<<<<<< .mine
public class LoginController implements Initializable {
    
    @FXML   private TextField txtUsuario,txtPassword;    
    @FXML   private Button btnInicioUsuario,btnCancelar;
    @Inject Validaciones valida;
    
    
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        registraListener(txtUsuario,txtPassword); 
       
        
    }   
    
   public void login(Event event) throws IOException {
        if(!valida.validaCampoVacio(txtUsuario.getText(),"Usuario")){
            txtUsuario.requestFocus();
            return;
        }else if (!valida.validaCampoVacio(txtPassword.getText(),"ContraseÃ±a")){
            txtPassword.requestFocus();
            return;
        }//Validar  que el usuario este registrado en el sisteme y despues que este en Active Directory
        else{
             boolean usuarioExistente=false;
             if(txtUsuario.getText().equals("user") && txtPassword.getText().equals("123"))
               {
                   usuarioExistente=true;                
                   
                   
               }
        }
    }
   private void registraListener(TextField t1, TextField t2){
     
      t1.focusedProperty().addListener(new ChangeListener<Boolean>()
      {
            @Override
            public void changed(ObservableValue<? extends Boolean> arg0, Boolean arg1, Boolean arg2)
            {
                if (!arg2)
                {
                    if(!valida.validaLongitud(txtUsuario.getText(), 20)){
                         txtUsuario.requestFocus();
                         return;
                      }
                }
                
            }
        });
      t2.focusedProperty().addListener(new ChangeListener<Boolean>()
      {
            @Override
            public void changed(ObservableValue<? extends Boolean> arg0, Boolean arg1, Boolean arg2)
            {
                if (!arg2)
                {
                    if(!valida.validaLongitud(txtPassword.getText(), 20)){
                        txtPassword.requestFocus();
                      }
                }
                
            }
        });
        
=======
@FXMLController("/fxml/auth/login.fxml")
public class LoginController {
    @Inject
    FXMLLoader fxmlLoader;

    @Inject
    SMSProveedorService smsProveedorService;

    @Inject WelcomeController welcomeController;

    @FXML private TextField inputUser;
    @FXML private PasswordField inputPassword;

    @FXML @LinkAction(WelcomeController.class)
    private Button loginButton;

    public void login(Event event) throws IOException {
        System.out.println(smsProveedorService);
        System.out.println(inputUser.getText());
        System.out.println(inputPassword.getText());

        InputStream is = null;

        is = getClass().getResourceAsStream("/fxml/security/Contenedor.fxml");
        fxmlLoader.setController(welcomeController);
        WeldJavaFXLauncher.mainStage.setScene(new Scene((Parent) fxmlLoader.load(is)));
>>>>>>> .r3536
    }
}
